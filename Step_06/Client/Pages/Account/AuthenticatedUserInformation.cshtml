@page
@model Client.Pages.Account.AuthenticatedUserInformationModel
@inject Infrastructure.Security.AuthenticatedUserService AuthenticatedUserService

<h3>
	Page: Authenticated User Information
</h3>

@if (User.Identity is null || User.Identity.IsAuthenticated == false)
{
	return;
}

<hr />

<ul>
	<li>
		Name: @(User.Identity.Name)
	</li>
	<li>
		Is Authenticated: @(User.Identity.IsAuthenticated)
	</li>
	<li>
		Authentication Type: @(User.Identity.AuthenticationType)
	</li>
</ul>

<hr />

<h3>
	Claims
</h3>

<ul>
	@foreach (var claim in User.Claims)
	{
		<li>
			Issuer: @(claim.Issuer)
			<br />
			Original Issuer: @(claim.OriginalIssuer)
			<br />
			Subject: @(claim.Subject)
			<br />
			Type: @(claim.Type)
			<br />
			Value: @(claim.Value)
			<br />
			Value Type: @(claim.ValueType)
			<br />
			Properties.Count: @(claim.Properties.Count)
		</li>
	}
</ul>

<hr />

<h3>
	Strongly Typed Claims
</h3>

<ul>
	<li>
		Is Authenticated: @(AuthenticatedUserService.IsAuthenticated)
	</li>

	<li>
		Name: @(AuthenticatedUserService.Name)
	</li>
	<li>
		Role: @(AuthenticatedUserService.Role)
	</li>

	<li>
		User IP: @(AuthenticatedUserService.UserIP)
	</li>
	<li>
		Last Name: @(AuthenticatedUserService.LastName)
	</li>
	<li>
		First Name: @(AuthenticatedUserService.FirstName)
	</li>
	<li>
		Username: @(AuthenticatedUserService.Username)
	</li>
	<li>
		Email Address: @(AuthenticatedUserService.EmailAddress)
	</li>
	<li>
		Cell Phone Number: @(AuthenticatedUserService.CellPhoneNumber)
	</li>

	<li>
		User Id: @(AuthenticatedUserService.UserId)
	</li>
	<li>
		Session Id: @(AuthenticatedUserService.SessionId)
	</li>

	<li>
		Role Code: @((int)AuthenticatedUserService.RoleCode) - @(AuthenticatedUserService.RoleCode)
	</li>
</ul>

<hr />
